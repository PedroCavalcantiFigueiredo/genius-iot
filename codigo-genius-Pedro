#include <string>
#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#define pinLedVermelho D0
#define pinLedVerde D1
#define pinLedAmarelo D2
#define pinLedAzul D3
#define pinBuz D4
#define pinBotaoVermelho D5
#define pinBotaoVerde D6
#define pinBotaoAmarelo D7
#define pinBotaoAzul D8
int sequencia[30] = {};
int botao[4] = {pinBotaoVermelho,pinBotaoVerde,pinBotaoAmarelo,pinBotaoAzul};
int sons[4] = {262,294,330,349};
int led[4] = {pinLedVermelho,pinLedVerde,pinLedAmarelo,pinLedAzul};
int rodada = 0;
int verificador = 0;
int botao_pressionado = 0;
int tempo = 500;
bool apertou = false;
bool game_over = false;
char rodadaAtual[5];
// WiFi credentials
const char* ssid = "McCoyisKing_2.4GHz";
const char* password = "euabraceioJoey";
// MQTT broker details
const char* mqttServer = "91.121.93.94";
const int mqttPort = 1883;
const char* mqttClientName = "test.mosquitto.org";
WiFiClient espClient;
PubSubClient client(espClient);
void setupWiFi() {
delay(10);
Serial.println();
Serial.print("Connecting to ");
Serial.println(ssid);
WiFi.begin(ssid, password);
while (WiFi.status() != WL_CONNECTED) {
delay(500);
Serial.print(".");
}
Serial.println("");
Serial.println("WiFi connected");
Serial.println("IP address: ");
Serial.println(WiFi.localIP());
}
void setupMQTT() {
client.setServer(mqttServer, mqttPort);
}
void reconnect() {
while (!client.connected()) {
Serial.print("Attempting MQTT connection...");
if (client.connect(mqttClientName)) {
Serial.println("connected");
} else {
Serial.print("failed, rc=");
Serial.print(client.state());
Serial.println(" try again in 5 seconds");
delay(5000);
}
}
}
void setup()
{
Serial.begin(9600);
pinMode(pinBotaoVermelho,INPUT); // Botao 1
pinMode(pinBotaoVerde,INPUT); // Botao 2
pinMode(pinBotaoAmarelo,INPUT); // Botao 3
pinMode(pinBotaoAzul,INPUT); // Botao 4
pinMode(pinLedVermelho,OUTPUT); // LED 1
pinMode(pinLedVerde,OUTPUT); // LED 2
pinMode(pinLedAmarelo,OUTPUT); // LED 3
pinMode(pinLedAzul,OUTPUT); // LED 4
pinMode(pinBuz,OUTPUT); // Buzzer
setupWiFi();
setupMQTT();
}
void loop()
{
if (!client.connected()) {
reconnect();
}
client.loop();
while(!apertou)
{
for(int i=0;i<=3;i++)
{
if(digitalRead(botao[i])==HIGH)
{
apertou = true;
delay(1000);
digitalWrite(pinLedVermelho,HIGH);
tone(pinBuz,300);
delay(1000);
noTone(pinBuz);
digitalWrite(pinLedVerde,HIGH);
tone(pinBuz,305);
delay(1000);
noTone(pinBuz);
digitalWrite(pinLedAmarelo,HIGH);
tone(pinBuz,310);
delay(1000);
noTone(pinBuz);
digitalWrite(pinLedAzul,HIGH);
tone(pinBuz,315);
delay(1000);
noTone(pinBuz);
for(i=0;i<=3;i++)
digitalWrite(led[i],LOW);
for(i=1000;i>=0;i--)
tone(pinBuz,i);
noTone(pinBuz);
delay(1000);
}
}
}
RodadaSeguinte();
ContinuarSequencia();
VezdoJogador();
if(game_over == true)
{
sequencia[32] = {};
rodada = 0;
verificador = 0;
game_over = false;
apertou = false;
}
else{
if(client.connected()) {
client.publish("projetoPedro/Genius", "Parabéns você acertou!");
}
}
delay(1000);
}
void RodadaSeguinte()
{
int aleatorio = random(4);
sequencia[rodada] = aleatorio;
rodada++;
sprintf(rodadaAtual, "%d", rodada);
if(client.connected()) {
client.publish("projetoPedro/Genius", rodadaAtual);
}
}
void ContinuarSequencia()
{
for(int i=0;i<rodada;i++)
{
tone(pinBuz,sons[sequencia[i]]);
digitalWrite(led[sequencia[i]],HIGH);
delay(tempo);
noTone(pinBuz);
digitalWrite(led[sequencia[i]],LOW);
delay(100);
}
if(rodada%5==0)
tempo-=50;
}
void VezdoJogador()
{
for(int i=0;i<rodada;i++)
{
bool jogada_efetuada = false;
while(!jogada_efetuada)
{
for(int i=0;i<=3;i++)
{
if (digitalRead(botao[i])==HIGH)
{
botao_pressionado = i;
tone(pinBuz,sons[i]);
digitalWrite(led[i],HIGH);
delay(300);
digitalWrite(led[i],LOW);
noTone(pinBuz);
jogada_efetuada = true;
}
}
}
if(sequencia[verificador] != botao_pressionado)
{
for(int i=0;i<=3;i++)
{
tone(pinBuz,70);
digitalWrite(led[i],HIGH);
delay(100);
digitalWrite(led[i],LOW);
noTone(pinBuz);
}
game_over = true;
if(client.connected()) {
client.publish("projetoPedro/Genius", "Você errou!");
}
break;
}
verificador++;
}
verificador = 0;
}
